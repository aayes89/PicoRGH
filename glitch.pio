; Slam (01/04/2025)
;
; This program is free software; you can redistribute it and/or modify it
; under the terms and conditions of the GNU General Public License,
; version 2, as published by the Free Software Foundation.
;
; This program is distributed in the hope it will be useful, but WITHOUT
; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
; more details.
;
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>.

.program glitch

; Registros utilizados:
; - y: Contador para el retardo
; - x: Contador para el ancho del pulso

.wrap_target
    pull        ; Carga el retardo desde FIFO → temp
    mov y, status     ; Mover retardo a Y

    pull        ; Carga el ancho desde FIFO → temp
    mov x, status     ; Mover ancho a X

    ; Esperar retardo
delay_loop:
    jmp y-- delay_loop
    nop             ; No hay side-set, se usa nop para mantener la sincronización

    ; Generar pulso de glitch (HIGH)
    set pins, 1

    ; Mantener pulso por 'X' ciclos
pulse_loop:
    jmp x-- pulse_loop
    nop             ; No hay side-set, se usa nop para mantener la sincronización

    ; Finalizar pulso (LOW)
    set pins, 0
.wrap

;.program glitch

; Registros utilizados:
; - OSRA: Almacena el retardo (ciclos)
; - OSXB: Almacena el ancho del pulso (ciclos)

;side_set 1  ; Usamos 1 bit para side-set (opcional)

;.wrap_target
;    pull            ; Carga el retardo desde FIFO → OSRA
;    mov y, osra     ; Mover retardo a Y
    
;    pull            ; Carga el ancho desde FIFO → OSRA
;    mov x, osra     ; Mover ancho a X
    
; Esperar retardo
;delay_loop:
;    jmp y-- delay_loop  side 0
    
; Generar pulso de glitch (HIGH)
;    set pins, 1     side 0
    
    ; Mantener pulso por 'X' ciclos
;pulse_loop:
;    jmp x-- pulse_loop  side 0
    
    ; Finalizar pulso (LOW)
;    set pins, 0     side 0
;.wrap
